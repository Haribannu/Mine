class MyQueue {

  /** Initialize your data structure here. */
  Stack<Integer> s;
  Stack<Integer> r;
  public MyQueue() {
    s = new Stack<>();
    r = new Stack<>();
  }

  /** Push element x to the back of queue. */
  public void push(int x) {
    s.push(x);
  }

  /** Removes the element from in front of queue and returns that element. */
  public int pop() {
    while (!s.isEmpty()) {
      r.push(s.pop());
    }
    int num = r.pop();
    while (!r.isEmpty()) {
      s.push(r.pop());
    }
    return num;
  }

  /** Get the front element. */
  public int peek() {
    while (!s.isEmpty()) {
      r.push(s.pop());
    }
    int num = r.peek();
    while (!r.isEmpty()) {
      s.push(r.pop());
    }
    return num;
  }

  /** Returns whether the queue is empty. */
  public boolean empty() {
    return s.isEmpty();
  }
}
